<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	
	<!-- listener: 이벤트가 발생했을 때 수행할 클래스 이름을 설정
	     web event: 애플리케이션의 시작과 종료, 세션의 생성과 소멸
	     Spring MVC 설정: WEB-INF 디렉토리에 있는 applicationContext.xml 파일을 찾아서 bean 
		전부 전역객체로 생성하도록 하는 설정입니다.  -->
	<!-- 모든 곳에서 사용할 수 있는 bean을 WEB-INF/spring/root-Context.xml 파일에 만드는 설정 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- applicationContext.xml 파일의 경로를 변경하는 설정 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/root-context.xml</param-value>
	</context-param>
	
	<!-- FrontController 역할을 수행하는 Dispatcher-Servlet 파일의 경로를 설정 -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		<!-- URL 패턴과 연결. /는 확장자가 jsp인 요청을 제외한 모든 요청을 처리합니다.
		/는 Spring에서 사용 가능  -->
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- 파라미터 인코딩 설정 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 404 에러 페이지 설정 -->
	<error-page>
	<error-code>404</error-code>
	<location>/WEB-INF/views/error/404code.jsp</location>
</error-page>

</web-app>
